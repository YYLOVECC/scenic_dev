<?php
/**
 * Created by PhpStorm.
 * User: licong
 * Date: 2017/3/11
 * Time: 16:12
 */
namespace app\controllers;
use app\components\SuperController;
use app\services\func\TicketShowService;
use yii\web\HttpException;
use Yii;

class TicketShowController extends SuperController
{
    private $_module_url = '';

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        //模块权限检测
        $module_url = '/ticket-show';
        $module_id = $this->getModuleIdByUrl($module_url);
        if (!$module_id) {
            throw new HttpException(400);
        }
        $this->module_id = $module_id;
        if (!$this->checkModuleAccess($module_id)) {
            throw new HttpException(400);
        }
        $this->_module_url = $module_url;
    }
    public function actionIndex()
    {
        $this->scripts = [
            'js/ticket-show/list.js',
            'libs/kalendae/kalendae.standalone.js',
        ];
        $data = ['module_url'=>$this->_module_url];
        return $this->render('list.twig', $data);
    }
    /**
     * 通过ajax列表得到数据
     * @return string
     */
    public function actionAjaxTicketList()
    {
        $request = Yii::$app->request;
        //下单时期日期转换
        $created_at_str = $request->post('created_at_str', '');
        $created_at_begin = 0;
        $created_at_end = 0;
        if (!empty($created_at_str)) {
            $time_list = explode('-', $created_at_str);
            $time_start_str = trim($time_list[0]);
            $time_end_str = count($time_list) > 1 ? trim($time_list[1]) : '';
            $created_at_begin = strtotime($time_start_str);
            $created_at_end = empty($time_end_str) ? 0 : strtotime($time_end_str);
            if ($created_at_end) {
                $created_at_end += 86400;
            }
        }
        $created_at_begin = date('Y-m-d H:i:s', $created_at_begin);
        $created_at_end = date('Y-m-d H:i:s', $created_at_end);
        $ordinal_str = $request->post('ordinal_str', '');
        $ordinal_type = $request->post('ordinal_type', '');
        $limit = $request->post('start', 0);
        $limit_size = $request->post('page_size', 20);
        $query = [
            'created_at_begin' => $created_at_begin,
            'created_at_end' => $created_at_end,
        ];
        $ticket_service = new TicketShowService();
        $result = $ticket_service->searchTicketList($query, $ordinal_str, $ordinal_type, $limit, $limit_size);
        return json_encode($result);
    }
}